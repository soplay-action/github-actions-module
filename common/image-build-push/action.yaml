name: image-build-and-push
author: SOPLAY
description: 'Use image-build-and-push module'
inputs:
  REPOSITORY:
    description: 'set repositroy'
    required: true
    default: 'my-app'
  REGISTY:
    description: 'set registry'
    required: true
    default: ''
  LOGIN_REGISTRY:
    description: 'set docker login registry url'
    required: false
    default: 'registry-1.docker.io/v2/'
  IMAGE_TAG:
    description: 'set image tag'
    required: false
    default: 'latest'
  DOCKERFILE_PATH:
    description: 'set dockerfile path'
    required: false
    default: 'Dockerfile'
  CONTEXT_PATH:
    description: 'set context path'
    required: false
    default: '.'
  PLATFORMS:
    description: 'set docker image platforms ( default : "linux/amd64,linux/arm64" )'
    required: false
    default: 'linux/amd64,linux/arm64'
  DOCKER_ACCESS_TOKEN:
    description: 'set docker access token'
    required: true
    default: ''

runs:
  using: composite
  steps:
    - name: set up QEMU
      uses: docker/setup-qemu-action@v3
    - name: set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: registry login
      uses: docker/login-action@v3
      with:
        registry: ${{ inputs.LOGIN_REGISTRY }}
        username: ${{ inputs.DOCKER_USERNAME }}
        password: ${{ inputs.DOCKER_ACCESS_TOKEN }}
    - name: build and push
      uses: docker/build-push-action@v5
      with:
        context: ${{ inputs.CONTEXT_PATH }}
        file: ${{ inputs.CONTEXT_PATH }}/${{ inputs.DOCKERFILE_PATH }}
        push: true
        tags: ${{ inputs.REGISTY }}/${{ inputs.REPOSITORY }}:${{ inputs.IMAGE_TAG }}
        platforms: ${{ inputs.PLATFORMS }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
